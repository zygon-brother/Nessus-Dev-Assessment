'use strict';

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const test = require('ava');
const request = require('supertest');
const server = require('../server');
const controller = require('../controllers');

test.beforeEach(t => {
	server().start();
});

test('A first unit test', (() => {
	var _ref = _asyncToGenerator(function* (t) {
		controller.setTestVals({
			"hosts": [{
				"id": 1,
				"name": "localhost.localdomain",
				"ipv4": "127.0.0.1"
			}]
		});

		const res = yield request('http://localhost:8080').get('/hosts').set('Accept', 'application/json');

		var hosts = JSON.parse(res.text);
		console.log(JSON.stringify(hosts));

		t.is(res.status, 200);
		t.is(hosts[0].id, 1);
	});

	return function (_x) {
		return _ref.apply(this, arguments);
	};
})());
//# sourceMappingURL=..\node_modules\.cache\ava\c5000673a561d8f4d6e7c5b078d789e9.js.map